// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test TestApp Stack's Snapshot test 1`] = `
{
  "Outputs": {
    "exampleApigatewayEndpoint3729E27C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "exampleApigateway68808452",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "exampleApigatewayDeploymentStageprod136717A4",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "exampleApigateway68808452": {
      "Properties": {
        "Name": "dummy-apigateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "exampleApigatewayAccountC72BD339": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "exampleApigateway68808452",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "exampleApigatewayCloudWatchRoleC2FD3AB5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "exampleApigatewayCloudWatchRoleC2FD3AB5": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "exampleApigatewayDeploymentD59D0E20c73e55e7b3347dd1faf945786f8484b7": {
      "DependsOn": [
        "exampleApigatewayGETCAD6B3E8",
        "exampleApigatewayOPTIONS4D654D48",
        "exampleApigatewayPOSTE289FC10",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "exampleApigateway68808452",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "exampleApigatewayDeploymentStageprod136717A4": {
      "DependsOn": [
        "exampleApigatewayAccountC72BD339",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "exampleApigatewayDeploymentD59D0E20c73e55e7b3347dd1faf945786f8484b7",
        },
        "RestApiId": {
          "Ref": "exampleApigateway68808452",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "exampleApigatewayGETApiPermissionCdkAppStackexampleApigateway096D29CDGETADFA725D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "rootgetFF2D24BA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "exampleApigateway68808452",
              },
              "/",
              {
                "Ref": "exampleApigatewayDeploymentStageprod136717A4",
              },
              "/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "exampleApigatewayGETApiPermissionTestCdkAppStackexampleApigateway096D29CDGETC003B18D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "rootgetFF2D24BA",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "exampleApigateway68808452",
              },
              "/test-invoke-stage/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "exampleApigatewayGETCAD6B3E8": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "rootgetFF2D24BA",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "exampleApigateway68808452",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "exampleApigateway68808452",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "exampleApigatewayOPTIONS4D654D48": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "exampleApigateway68808452",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "exampleApigateway68808452",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "exampleApigatewayPOSTApiPermissionCdkAppStackexampleApigateway096D29CDPOSTF8533FBC": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "rootpost0CB6A99B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "exampleApigateway68808452",
              },
              "/",
              {
                "Ref": "exampleApigatewayDeploymentStageprod136717A4",
              },
              "/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "exampleApigatewayPOSTApiPermissionTestCdkAppStackexampleApigateway096D29CDPOSTA4A179EA": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "rootpost0CB6A99B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "exampleApigateway68808452",
              },
              "/test-invoke-stage/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "exampleApigatewayPOSTE289FC10": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "rootpost0CB6A99B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "exampleApigateway68808452",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "exampleApigateway68808452",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "rootgetFF2D24BA": {
      "DependsOn": [
        "rootgetServiceRoleB5B312AB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ea7b566109d9cc8032cf0a246f6c8c6f0fe38883a9334966131b0fa7c9ce5265.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": {
          "Fn::GetAtt": [
            "rootgetServiceRoleB5B312AB",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootgetServiceRoleB5B312AB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "rootpost0CB6A99B": {
      "DependsOn": [
        "rootpostServiceRole892251B6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "502413a45741bfc0f9d35fc73819511c349b8590ed507cb7f58f466b2830ca7b.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.lambdaHandler",
        "Role": {
          "Fn::GetAtt": [
            "rootpostServiceRole892251B6",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "rootpostServiceRole892251B6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
